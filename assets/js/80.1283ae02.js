(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{271:function(e,t,a){"use strict";a.r(t);var s=a(3),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"ignite-web控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignite-web控制台"}},[e._v("#")]),e._v(" Ignite Web控制台")]),e._v(" "),a("h2",{attrs:{id:"_1-ignite-web控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-ignite-web控制台"}},[e._v("#")]),e._v(" 1.Ignite Web控制台")]),e._v(" "),a("p",[a("code",[e._v("Ignite Web控制台")]),e._v("是一个交互式的配置向导、管理和监控工具。它可以：")]),e._v(" "),a("ul",[a("li",[e._v("创建和下载Ignite集群使用的各种配置：\n"),a("img",{attrs:{src:"https://files.readme.io/f5eeab2-cluster.png",alt:""}})]),e._v(" "),a("li",[e._v("从任意RDBMS的模式中自动化构造Ignite的SQL元数据：\n"),a("img",{attrs:{src:"https://files.readme.io/16d8b74-model.png",alt:""}})]),e._v(" "),a("li",[e._v("在内存缓存中执行SQL查询，以及查看执行计划。\n"),a("img",{attrs:{src:"https://files.readme.io/0383009-Screen_Shot_2017-02-02_at_12.47.09_PM.png",alt:""}})])]),e._v(" "),a("p",[e._v("Ignite的"),a("strong",[e._v("Web控制台")]),e._v("，是一个可以部署在系统环境中的Web应用。它可以配置所有的集群属性，从数据库中导入模式用于与持久化存储集成。它可以接入特定的数据库然后生成所有必要的OR映射配置（XML以及纯Java）以及Java领域模型POJOs。Web控制台还有集群监控的功能（使用GridGain单独的插件实现），它会显示各种缓存以及节点的指标数据，比如CPU和堆的使用情况等。")]),e._v(" "),a("h2",{attrs:{id:"_2-入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-入门"}},[e._v("#")]),e._v(" 2.入门")]),e._v(" "),a("h3",{attrs:{id:"_2-1-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-安装"}},[e._v("#")]),e._v(" 2.1.安装")]),e._v(" "),a("p",[e._v("Ignite的Web控制台是一个WEB应用，需要构建、打包然后部署在自己的环境上。另外，它需要安装NodeJS，MongoDB以及Ignite的Web代理。")]),e._v(" "),a("p",[e._v("参照"),a("code",[e._v("构建和部署")]),e._v("章节的文档，然后按照步骤操作即可。")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("一个免费已部署的Ignite Web控制台实例")]),e._v(" "),a("p",[e._v("在构建和部署自己的本地Ignite Web控制台实例之前，可以看一下一个免费已部署的"),a("a",{attrs:{href:"https://console.gridgain.com/",target:"_self",rel:"noopener noreferrer"}},[e._v("Web控制台实例")]),e._v("，利用这个站点，花几分钟就可以大概了解控制台的已有功能。")])]),e._v(" "),a("p",[e._v("Ignite的Web控制台启动运行之后，需要按照下面章节的步骤配置并且启动Web代理，代理是Ignite的Web控制台和Ignite集群之间的媒介。")]),e._v(" "),a("h3",{attrs:{id:"_2-2-ignite-web代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-ignite-web代理"}},[e._v("#")]),e._v(" 2.2.Ignite Web代理")]),e._v(" "),a("p",[e._v("Ignite的Web代理是一个独立的Java应用，它可以建立Ignite集群与Web控制台之间的连接。Web Agent与集群节点间采用REST接口进行通信，而与Web控制台之间采用WebSocket进行通信。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://files.readme.io/924bc44-Apache-Ignite-Cluster.png",alt:""}})]),e._v(" "),a("p",[e._v("举例来说，Ignite的Web Agent功能如下：")]),e._v(" "),a("ul",[a("li",[e._v("Web控制台与Ignite集群之间执行SQL查询的代理；")]),e._v(" "),a("li",[e._v("Web控制台与RDBMS之间的代理。")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://files.readme.io/7affb9b-ignite-web-console-schema-import.png",alt:""}})]),e._v(" "),a("p",[a("strong",[e._v("使用")])]),e._v(" "),a("p",[e._v("Ignite Web代理的zip压缩包中的"),a("code",[e._v("ignite-web-agent.{sh|bat}")]),e._v("脚本可用于启动这个代理。一定要满足下面的必要条件，使得代理可以在Ignite集群和Ignite Web控制台之间建立连接。")]),e._v(" "),a("p",[e._v("1.为了与Web代理通信，Ignite节点需要开启REST服务模式（将"),a("code",[e._v("ignite-rest-http")]),e._v("文件夹从"),a("code",[e._v("lib/optional/")]),e._v("移动到"),a("code",[e._v("lib/")]),e._v("中）。如果是从IDE启动节点，那么需要将下面的依赖加入pom.xml文件；")]),e._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("org.apache.ignite"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("ignite-rest-http"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("{ignite.version}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),a("p",[e._v("2.配置Web代理的"),a("code",[e._v("serverURI")]),e._v("属性，将其指向Ignite节点的REST服务的URL，代理默认会连接"),a("code",[e._v("http://localhost:8080")]),e._v("。")]),e._v(" "),a("p",[a("strong",[e._v("配置")])]),e._v(" "),a("p",[a("em",[e._v("配置文件")])]),e._v(" "),a("p",[e._v("Ignite的Web代理默认会试图从"),a("code",[e._v("default.properties")]),e._v("文件中加载配置。这个文件的内容需要遵循一个简单的基于行的格式。")]),e._v(" "),a("p",[e._v("可用的属性名包括："),a("code",[e._v("tokens")]),e._v("，"),a("code",[e._v("server-uri")]),e._v("，"),a("code",[e._v("node-uri")]),e._v("，"),a("code",[e._v("driver-folder")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("tokens")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("1a2b3c4d5f,2j1s134d12")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("serverURI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("https://console.example.com:3001")]),e._v("\n")])])]),a("p",[a("em",[e._v("命令行参数")])]),e._v(" "),a("p",[e._v("要获得帮助，可以在终端中执行"),a("code",[e._v("ignite-web-agent.{sh|bat} -h")]),e._v("或者"),a("code",[e._v("ignite-web-agent.{sh|bat} --help")]),e._v("。")]),e._v(" "),a("p",[e._v("可用的属性如下：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("-h")]),e._v(","),a("code",[e._v("--help")]),e._v("：输出帮助信息；")]),e._v(" "),a("li",[a("code",[e._v("-c")]),e._v(","),a("code",[e._v("--config")]),e._v("：配置文件路径；")]),e._v(" "),a("li",[a("code",[e._v("-d")]),e._v(","),a("code",[e._v("--driver-folder")]),e._v("：JDBC驱动所在文件夹路径，默认值是"),a("code",[e._v("./jdbc-drivers")]),e._v("；")]),e._v(" "),a("li",[a("code",[e._v("-n")]),e._v(","),a("code",[e._v("--node-uri")]),e._v("：要接入的Ignite REST服务端的URI，默认值是"),a("code",[e._v("http://localhost:8080")]),e._v("；")]),e._v(" "),a("li",[a("code",[e._v("-s")]),e._v(","),a("code",[e._v("--server-uri")]),e._v("：要接入的Ignite Web控制台的URI，默认值是"),a("code",[e._v("http://localhost:3001")]),e._v(";")]),e._v(" "),a("li",[a("code",[e._v("-t")]),e._v(","),a("code",[e._v("--tokens")]),e._v("：用户的安全令牌。")])]),e._v(" "),a("p",[a("strong",[e._v("代理配置")])]),e._v(" "),a("p",[e._v("代理可以通过将系统属性、"),a("code",[e._v("JVM_OPTS")]),e._v("环境变量的方式传给Web代理。")]),e._v(" "),a("p",[e._v("在如下文档中可以找到详细的描述：\n"),a("a",{attrs:{href:"http://docs.oracle.com/javase/7/docs/api/java/net/doc-files/net-properties.html",target:"_self",rel:"noopener noreferrer"}},[e._v("http://docs.oracle.com/javase/7/docs/api/java/net/doc-files/net-properties.html")]),e._v("。")]),e._v(" "),a("p",[a("em",[e._v("HTTP")])]),e._v(" "),a("p",[a("code",[e._v("http.proxyHost")]),e._v("：代理服务器的主机名或者地址；")]),e._v(" "),a("p",[a("code",[e._v("http.proxyPort")]),e._v("：代理服务器的端口号。")]),e._v(" "),a("p",[e._v("如果代理需要认证，还需要提供如下的系统属性：")]),e._v(" "),a("p",[a("code",[e._v("http.proxyUsername")]),e._v("：用户名；")]),e._v(" "),a("p",[a("code",[e._v("http.proxyPassword")]),e._v("：密码。")]),e._v(" "),a("p",[e._v("Shell：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("JVM_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-Dhttp.proxyHost=<proxy-hostname> -Dhttp.proxyPort=<proxy-port> -Dhttp.proxyUsername=<proxy-username> -Dhttp.proxyPassword=<proxy-password>"')]),e._v(" ./ignite-web-agent.sh\n")])])]),a("p",[e._v("CMD：")]),e._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("set")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("JVM_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttp."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyHost")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("hostname> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttp."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyPort")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("port> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttp."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyUsername")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("username> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttp."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyPassword")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("password>")]),e._v("\n./ignite-web-agent.bat\n")])])]),a("p",[a("em",[e._v("HTTPS")])]),e._v(" "),a("p",[a("code",[e._v("https.proxyHost")]),e._v("：代理服务器的主机名或者地址；")]),e._v(" "),a("p",[a("code",[e._v("https.proxyPort")]),e._v("：代理服务器的端口号。")]),e._v(" "),a("p",[e._v("如果代理需要认证，还需要提供如下的系统属性：")]),e._v(" "),a("p",[a("code",[e._v("https.proxyUsername")]),e._v("：用户名；")]),e._v(" "),a("p",[a("code",[e._v("https.proxyPassword")]),e._v("：密码。")]),e._v(" "),a("p",[e._v("Shell：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("JVM_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-Dhttps.proxyHost=<proxy-hostname> -Dhttps.proxyPort=<proxy-port> -Dhttps.proxyUsername=<proxy-username> -Dhttps.proxyPassword=<proxy-password>"')]),e._v(" ./ignite-web-agent.sh\n")])])]),a("p",[e._v("CMD：")]),e._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("set")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("JVM_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttps."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyHost")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("hostname> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttps."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyPort")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("port> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttps."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyUsername")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("username> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Dhttps."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("proxyPassword")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("password>")]),e._v("\n./ignite-web-agent.bat\n")])])]),a("p",[a("em",[e._v("SOCKS")])]),e._v(" "),a("p",[a("code",[e._v("socksProxyHost")]),e._v("：代理服务器的主机名或者地址；")]),e._v(" "),a("p",[a("code",[e._v("socksProxyPort")]),e._v("：代理服务器的端口号。")]),e._v(" "),a("p",[e._v("如果代理需要认证，还需要提供如下的系统属性：")]),e._v(" "),a("p",[a("code",[e._v("java.net.socks.username")]),e._v("：用户名；")]),e._v(" "),a("p",[a("code",[e._v("java.net.socks.password")]),e._v("：密码。")]),e._v(" "),a("p",[e._v("Shell:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("JVM_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-DsocksProxyHost=<proxy-hostname> -DsocksProxyPort=<proxy-port> -Djava.net.socks.username=<proxy-username> -Djava.net.socks.password=<proxy-password>"')]),e._v(" ./ignite-web-agent.sh\n")])])]),a("p",[e._v("CMD:")]),e._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("set")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("JVM_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("DsocksProxyHost")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("hostname> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("DsocksProxyPort")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("port> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Djava.net.socks."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("username")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("username> "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Djava.net.socks."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("<proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("password>")]),e._v("\n./ignite-web-agent.bat\n")])])]),a("h2",{attrs:{id:"_3-构建和部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-构建和部署"}},[e._v("#")]),e._v(" 3.构建和部署")]),e._v(" "),a("h3",{attrs:{id:"_3-1-要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-要求"}},[e._v("#")]),e._v(" 3.1.要求")]),e._v(" "),a("p",[e._v("为了在本地部署Ignite的Web控制台，需要先安装：")]),e._v(" "),a("ul",[a("li",[e._v("MongoDB（3.2.0以上版本），具体可以参照"),a("a",{attrs:{href:"http://docs.mongodb.org/manual/installation",target:"_self",rel:"noopener noreferrer"}},[e._v("文档")]),e._v("；")]),e._v(" "),a("li",[e._v("NodeJS（6.5.X以上版本），可以从"),a("a",{attrs:{href:"https://nodejs.org/en/download/current",target:"_self",rel:"noopener noreferrer"}},[e._v("https://nodejs.org/en/download/current")]),e._v("针对具体的OS找到相对应的安装文件。")])]),e._v(" "),a("p",[e._v("开始之前需要下载依赖：")]),e._v(" "),a("ul",[a("li",[e._v("后台：")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$IGNITE_HOME")]),e._v("/modules/web-console/backend\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --no-optional\n")])])]),a("ul",[a("li",[e._v("前台：")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$IGNITE_HOME")]),e._v("/modules/web-console/frontend\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --no-optional\n")])])]),a("h3",{attrs:{id:"_3-2-构建ignite-web代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-构建ignite-web代理"}},[e._v("#")]),e._v(" 3.2.构建Ignite Web代理")]),e._v(" "),a("p",[e._v("要从源代码构建Ignite的Web代理，需要在"),a("code",[e._v("$IGNITE_HOME")]),e._v("文件夹中执行如下的命令：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("mvn clean package -pl :ignite-web-agent -am -P web-console -DskipTests"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n")])])]),a("p",[e._v("构建过程完成后，会在"),a("code",[e._v("$IGNITE_HOME/modules/web-console/web-agent/taget")]),e._v("中找到"),a("code",[e._v("ignite-web-agent-x.x.x.zip")]),e._v("。")]),e._v(" "),a("h3",{attrs:{id:"_3-3-在开发模式中运行ignite的web控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-在开发模式中运行ignite的web控制台"}},[e._v("#")]),e._v(" 3.3.在开发模式中运行Ignite的Web控制台")]),e._v(" "),a("p",[e._v("要在开发模式中运行Ignite的Web控制台，可以按照如下步骤操作：")]),e._v(" "),a("ul",[a("li",[e._v("配置MongoDB以服务的模式运行，或者在终端中执行"),a("code",[e._v("mongod")]),e._v("命令来启动MongoDB；")]),e._v(" "),a("li",[e._v("将"),a("code",[e._v("ignite-web-agent-x.x.x.zip")]),e._v("复制到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/backend/agent_dists")]),e._v("文件夹；")]),e._v(" "),a("li",[e._v("在终端中切换到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/backend")]),e._v("，如果需要，运行"),a("code",[e._v("npm install --no-optional")]),e._v("(如果依赖改变)，然后运行"),a("code",[e._v("npm start")]),e._v("启动后台；")]),e._v(" "),a("li",[e._v("在另一个终端中切换到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/frontend")]),e._v("，如果需要，运行"),a("code",[e._v("npm install --no-optional")]),e._v("(如果依赖改变)，然后运行"),a("code",[e._v("npm run dev")]),e._v("以开发模式启动webpack；")]),e._v(" "),a("li",[e._v("在浏览器中打开："),a("code",[e._v("http://localhost:9000")]),e._v("；")]),e._v(" "),a("li",[e._v("在"),a("code",[e._v("2.2.入门")]),e._v("章节中可以看到如何将部署的控制台接入一个远程集群，或者如何在远程主机上访问控制台。")])]),e._v(" "),a("h3",{attrs:{id:"_3-4-在生产模式中运行ignite的web控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-在生产模式中运行ignite的web控制台"}},[e._v("#")]),e._v(" 3.4.在生产模式中运行Ignite的Web控制台")]),e._v(" "),a("p",[a("strong",[e._v("前提条件")])]),e._v(" "),a("ul",[a("li",[e._v("安装了Apache HTTP Server的2.2及更新的版本或者nginx；")]),e._v(" "),a("li",[e._v("为Ignite的Web控制台分配一个专用的主机名（可选）。")])]),e._v(" "),a("p",[a("strong",[e._v("启动后台")])]),e._v(" "),a("ul",[a("li",[e._v("配置MongoDB以服务的模式运行，或者在终端中执行"),a("code",[e._v("mongod")]),e._v("命令来启动MongoDB；")]),e._v(" "),a("li",[e._v("将"),a("code",[e._v("ignite-web-agent-x.x.x.zip")]),e._v("复制到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/backend/agent_dists")]),e._v("文件夹；")]),e._v(" "),a("li",[e._v("在终端中切换到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/backend")]),e._v("；")]),e._v(" "),a("li",[e._v("运行"),a("code",[e._v("npm start")]),e._v("启动后台。")])]),e._v(" "),a("blockquote",[a("p",[e._v("如果希望以守护进程模式运行后台，需要为NodeJS应用使用进程管理器：pm2，forever等。")])]),e._v(" "),a("p",[a("strong",[e._v("构建前台")])]),e._v(" "),a("ul",[a("li",[e._v("在另一个终端中切换到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/frontend")]),e._v(";")]),e._v(" "),a("li",[e._v("运行"),a("code",[e._v("npm run build")]),e._v("为Web服务器生成文件（html、js、css）；")]),e._v(" "),a("li",[e._v("生成的文件位于"),a("code",[e._v("$IGNITE_HOME/modules/web-console/frontend/build")]),e._v("。")])]),e._v(" "),a("p",[a("strong",[e._v("配置Apache HTTP Server")])]),e._v(" "),a("ul",[a("li",[e._v("将"),a("code",[e._v("$IGNITE_HOME/modules/web-console/frontend/build")]),e._v("文件夹的内容复制到"),a("code",[e._v("$IGNITE_HOME/modules/web-console/frontend/build")]),e._v(";")]),e._v(" "),a("li",[e._v("如果Apache HTTP Server为多个站点提供服务，那么需要将下面的虚拟主机添加到"),a("code",[e._v("/etc/httpd/conf/httpd.conf")]),e._v("：\nhttpd.conf:")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<VirtualHost *:80>\n  ServerName www.WEB_CONSOLE_HOSTNAME\n  ServerAlias WEB_CONSOLE_HOSTNAME\n\n  DocumentRoot "/var/www/web-console-static"\n\n  RewriteEngine on\n\n  <Directory "/var/www/web-console-static">\n  AllowOverride All\n  Allow from all\n  </Directory>\n\n  ProxyRequests off\n\n  <proxy *>\n  Order deny,allow\n  Allow from all\n  </proxy>\n\n  ProxyPreserveHost On\n  RequestHeader set Host "WEB_CONSOLE_HOSTNAME"\n\n  RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f\n  RewriteRule ^ - [L]\n\n  RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]\n  RewriteCond %{HTTP:CONNECTION} ^Upgrade$ [NC]\n  RewriteRule .* ws://localhost:3000%{REQUEST_URI} [P,L]\n\n  RewriteCond %{REQUEST_URI} ^/agents/.* [OR]\n  RewriteCond %{REQUEST_URI} ^/socket.io/.*\n  RewriteRule ^ http://localhost:3000%{REQUEST_URI} [P,L]\n\n  RewriteCond %{REQUEST_URI} ^/api/v1/.*$\n  RewriteRule ^/api/v1/(.*)$ http://localhost:3000/$1 [P,L]\n\n  RewriteRule ^ /index.html [L]\n</VirtualHost>\n')])])]),a("blockquote",[a("p",[e._v("上面文件中的"),a("strong",[e._v("WEB_CONSOLE_HOSTNAME")]),e._v("，需要替换为部署Web控制台实例的机器的主机名。")])]),e._v(" "),a("p",[e._v("如果Apache HTTP Server还用于部署的Web控制台，那么下面的配置也需要添加到"),a("code",[e._v("/etc/httpd/conf/httpd.conf")]),e._v(":")]),e._v(" "),a("p",[e._v("httpd.conf:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('ServerName localhost\n\nDocumentRoot "/var/www/web-console-static"\n\nRewriteEngine on\n\n<Directory "/var/www/web-console-static">\nAllowOverride All\nAllow from all\n</Directory>\n\nProxyRequests off\n\n<proxy *>\nOrder deny,allow\nAllow from all\n</proxy>\n\nProxyPreserveHost On\nRequestHeader set Host "EXTERNAL_SERVER_IP"\n\nRewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f\nRewriteRule ^ - [L]\n\nRewriteCond %{REQUEST_URI} ^/agents/.* [OR]\nRewriteCond %{REQUEST_URI} ^/socket.io/.*\nRewriteRule ^ http://localhost:3000%{REQUEST_URI} [P,L]\n\nRewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]\nRewriteCond %{HTTP:CONNECTION} ^Upgrade$ [NC]\nRewriteRule .* ws://localhost:3000%{REQUEST_URI} [P,L]\n\nRewriteCond %{REQUEST_URI} ^/api/v1/.*$\nRewriteRule ^/api/v1/(.*)$ http://localhost:3000/$1 [P,L]\n\nRewriteRule ^ /index.html [L]\n')])])]),a("blockquote",[a("p",[e._v("上面的"),a("strong",[e._v("EXTERNAL_SERVER_IP")]),e._v("，需要替换为部署Web控制台实例的机器的主机名。")])]),e._v(" "),a("p",[e._v("执行"),a("code",[e._v("sudo apachectl restart")]),e._v("重启Apache HTTP Server以使配置生效。\n打开浏览器，根据部署类型打开下面的地址中的一个："),a("code",[e._v("http://WEB_CONSOLE_HOSTNAME")]),e._v("或"),a("code",[e._v("http://EXTERNAL_SERVER_IP")]),e._v("。")]),e._v(" "),a("p",[a("strong",[e._v("配置nginx HTTP Server")])]),e._v(" "),a("ul",[a("li",[e._v("将"),a("code",[e._v("$IGNITE_HOME/modules/web-console/frontend/build")]),e._v("文件夹中的内容复制到"),a("code",[e._v("/var/www/web-console-static")]),e._v(";")]),e._v(" "),a("li",[e._v("如果一个nginx HTTP Server为多个站点提供服务，需要为虚拟主机创建一个配置。比如创建一个配置文件"),a("code",[e._v("/etc/nginx/conf.d/web-console.conf")]),e._v("，内容如下：\n/etc/nginx/conf.d/web-console.conf：")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('upstream backend-api {\n  server localhost:3000;\n}\n\nserver {\n  listen 80;\n  server_name EXTERNAL_SERVER_IP WEB_CONSOLE_HOSTNAME;\n\n  set $ignite_console_dir /var/www/web-console-static;\n\n  root $ignite_console_dir;\n\n  error_page 500 502 503 504 /50x.html;\n\n  location / {\n    try_files $uri /index.html = 404;\n  }\n\n  location /api/v1 {\n    rewrite /api/v1/(.*) /$1 break;\n    proxy_set_header Host $http_host;\n    proxy_pass http://backend-api;\n  }\n\n  location /socket.io {\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_pass http://backend-api;\n  }\n\n  location /agents {\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_pass http://backend-api;\n  }\n\n  location = /50x.html {\n    root $ignite_console_dir/error_page;\n  }\n}\n')])])]),a("blockquote",[a("p",[e._v("上面的"),a("strong",[e._v("EXTERNAL_SERVER_IP")]),e._v("，需要替换为部署Web控制台实例的机器的主机名。\n"),a("strong",[e._v("WEB_CONSOLE_HOSTNAME")]),e._v("，需要替换为部署Web控制台实例的机器的主机名。")])]),e._v(" "),a("p",[e._v("执行"),a("code",[e._v("sudo service nginx restart")]),e._v("重启Nginx HTTP Server以使配置生效。")]),e._v(" "),a("p",[e._v("打开浏览器，根据部署类型打开下面的地址中的一个："),a("code",[e._v("http://WEB_CONSOLE_HOSTNAME")]),e._v("或"),a("code",[e._v("http://EXTERNAL_SERVER_IP")]),e._v("。")]),e._v(" "),a("p",[a("strong",[e._v("问题解决")])]),e._v(" "),a("p",[e._v("如果在浏览器中出现了"),a("code",[e._v("Forbidden")]),e._v("这样的错误，那么需要检查操作系统中所有的安全策略都配置正确了。")]),e._v(" "),a("h2",{attrs:{id:"_4-演示模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-演示模式"}},[e._v("#")]),e._v(" 4.演示模式")]),e._v(" "),a("h3",{attrs:{id:"_4-1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-概述"}},[e._v("#")]),e._v(" 4.1.概述")]),e._v(" "),a("p",[e._v("可以使用Web控制台的演示模式来研究和评估它有关配置和管理集群的各种功能，这个模式中，可以检查预定义的集群、缓存以及领域模型，它还启动了一个内置的H2数据库实例，可以执行各种SQL查询以及查看数据报表，还可以监控各种缓存和节点的指标，比如集群的CPU和堆使用量等。")]),e._v(" "),a("h3",{attrs:{id:"_4-2-启动演示模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-启动演示模式"}},[e._v("#")]),e._v(" 4.2.启动演示模式")]),e._v(" "),a("p",[e._v("要开启演示模式，需要点击控制台顶部菜单的"),a("code",[e._v("Start demo")]),e._v("按钮。")]),e._v(" "),a("ul",[a("li",[e._v("下载然后解压Ignite的Web代理；\n"),a("img",{attrs:{src:"https://files.readme.io/037ccba-download-web-agent.png",alt:""}})]),e._v(" "),a("li",[e._v("打开命令行终端，假定当前在"),a("code",[e._v("ignite-web-agent")]),e._v("目录，运行如下的命令：")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("./ignite-web-agent.sh\n")])])]),a("p",[a("img",{attrs:{src:"https://files.readme.io/ca768c5-start-ignite-web-agent.png",alt:""}}),e._v("\n启动Web代理之后，回到浏览器中就可以：")]),e._v(" "),a("p",[a("strong",[e._v("配置集群和缓存")])]),e._v(" "),a("p",[e._v("点击控制台侧边栏上的"),a("code",[e._v("Clusters")]),e._v("和"),a("code",[e._v("Caches")]),e._v("，可以查看和设定Ignite的配置参数，点击"),a("code",[e._v("Summary")]),e._v("可以下载这些配置的XML和Java格式文件，这个页面还可以下载一个可用的基于Maven的工程。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://files.readme.io/857edc8-summary.png",alt:""}})]),e._v(" "),a("p",[a("strong",[e._v("导入领域模型")])]),e._v(" "),a("p",[e._v("演示模式中，已连接的Web代理中已经启动了H2数据库实例，如下方法可以验证：")]),e._v(" "),a("ul",[a("li",[e._v("打开控制台的"),a("code",[e._v("Domain model")]),e._v("界面；")]),e._v(" "),a("li",[e._v("点击"),a("code",[e._v("Import from database")]),e._v("，可以看到一个描述Demo的模态窗口；")]),e._v(" "),a("li",[e._v("点击"),a("code",[e._v("Next")]),e._v("会看到一个可用模式的列表；")]),e._v(" "),a("li",[e._v("点击"),a("code",[e._v("Next")]),e._v("会看到一个可用表的列表；")]),e._v(" "),a("li",[e._v("点击"),a("code",[e._v("Next")]),e._v("会看到导入的选项；")]),e._v(" "),a("li",[e._v("选择之后点击"),a("code",[e._v("Save")]),e._v("。\n"),a("img",{attrs:{src:"https://files.readme.io/fbf02ed-domain-model.png",alt:""}})])]),e._v(" "),a("p",[a("strong",[e._v("执行SQL查询")])]),e._v(" "),a("p",[e._v("该模式中，会启动一个客户端和三个服务端节点，会创建一些缓存并且注入了数据，如下方法可以验证：")]),e._v(" "),a("ul",[a("li",[e._v("点击Web控制台顶层菜单的"),a("code",[e._v("Queries")]),e._v("选项卡；")]),e._v(" "),a("li",[e._v("会打开预配置"),a("code",[e._v("SQL Demo")]),e._v("查询的笔记本；")]),e._v(" "),a("li",[e._v("在demo数据库中，可以执行SQL查询，其中有表："),a("code",[e._v("Country, Department, Employee, Parking, Car")]),e._v("；")])]),e._v(" "),a("p",[e._v("比如输入如下的SQL：")]),e._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" cnt "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ParkingCache"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Parking p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INNER")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("JOIN")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"CarCache"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Car c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ON")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("parkingId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GROUP")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BY")]),e._v(" P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("NAME\n")])])]),a("ul",[a("li",[e._v("点击"),a("code",[e._v("Execute")]),e._v("按钮，会获得表中的若干数据；")]),e._v(" "),a("li",[e._v("点击"),a("code",[e._v("charts")]),e._v("按钮，可以看到自动生成的图表。")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://files.readme.io/5b5cdc8-sql-queries.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_5-docker部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker部署"}},[e._v("#")]),e._v(" 5.Docker部署")]),e._v(" "),a("p",[e._v("在本地环境中部署Ignite Web控制台的最简单方式是使用控制台的Docker镜像，如果基于Docker的方式不可行，那么可以参照"),a("code",[e._v("2.3.构建和部署")]),e._v("章节的内容。")]),e._v(" "),a("h3",{attrs:{id:"_5-1-启动web代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-启动web代理"}},[e._v("#")]),e._v(" 5.1.启动Web代理")]),e._v(" "),a("p",[e._v("如"),a("code",[e._v("2.2.入门")]),e._v("章节所说，要在Ignite集群和Web控制台之间建立连接，需要首先配置并且启动Ignite的Web代理，下面是步骤：")]),e._v(" "),a("ul",[a("li",[e._v("启动开启REST服务的Ignite节点，将"),a("code",[e._v("ignite-rest-http")]),e._v("目录从"),a("code",[e._v("IGNITE_HOME/libs/optional/")]),e._v("移动到"),a("code",[e._v("IGNITE_HOME/lib/")]),e._v("，或者如果从IDE启动节点，则需要将下面的依赖加入pom.xml文件：")])]),e._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("org.apache.ignite"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("ignite-rest-http"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("{ignite.version}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),a("ul",[a("li",[e._v("在"),a("code",[e._v("ignite-web-agent-{version}")]),e._v("目录下的"),a("code",[e._v("default.properties")]),e._v("文件中，需要配置Web代理的"),a("code",[e._v("serverURI")]),e._v("属性，这样它就可以访问Ignite节点的REST服务。如果不配置，代理默认会连接"),a("code",[e._v("http://localhost:8080")]),e._v("。代理会尝试从"),a("code",[e._v("default.properties")]),e._v("文件中加载配置参数，该文件的内容格式比较简单，有效的属性名为："),a("code",[e._v("tokens")]),e._v("，"),a("code",[e._v("server-uri")]),e._v("，"),a("code",[e._v("node-uri")]),e._v("，"),a("code",[e._v("driver-folder")]),e._v("。")])]),e._v(" "),a("p",[e._v("default.properties：")]),e._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("tokens")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("1a2b3c4d5f,2j1s134d12")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("serverURI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[e._v("https://console.example.com:3001")]),e._v("\n")])])]),a("ul",[a("li",[e._v("在终端中，在Web代理的目录中使用"),a("code",[e._v("ignite-web-agent.{sh|bat}")]),e._v("脚本启动Web代理，如下：")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ ./ignite-web-agent.sh\n")])])]),a("h3",{attrs:{id:"_5-2-部署web控制台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-部署web控制台"}},[e._v("#")]),e._v(" 5.2.部署Web控制台")]),e._v(" "),a("p",[e._v("下面是部署的完整步骤：")]),e._v(" "),a("ul",[a("li",[e._v("拉取Ignite Web控制台的Docker镜像:"),a("code",[e._v("docker pull apacheignite/web-console-standalone")]),e._v(";")]),e._v(" "),a("li",[e._v("启动Web控制台："),a("code",[e._v("docker run -d -p 80:80 -v <host_absolute_path>:/var/lib/mongodb --name web-console-standalone apacheignite/web-console-standalone")]),e._v("。")])]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("注意")]),e._v("\n1.需要使用"),a("code",[e._v("sudo")]),e._v("来运行docker命令；\n2.如果"),a("code",[e._v("80")]),e._v("端口已被占用，那么容器端口需要映射到其它的可用端口。比如，下面的命令将容器的"),a("code",[e._v("80")]),e._v("端口绑定的宿主机的"),a("code",[e._v("8080")]),e._v("端口："),a("code",[e._v("sudo docker run -d -p 8080:80 -v <host_absolute_path>:/var/lib/mongodb --name web-console-standalone apacheignite/web-console-standalone")]),e._v(";\n3."),a("code",[e._v("<host_absolute_path>")]),e._v("：是宿主机中MongoDB创建数据库文件的路径。这个文件夹应该在docker运行前创建好，打开"),a("code",[e._v("Docker->Preferences->File Sharing")]),e._v("然后在那里创建目录，或者使用其它的方式也行；")])]),e._v(" "),a("ul",[a("li",[e._v("在浏览器中打开Web控制台："),a("code",[e._v("http://localhost")]),e._v("或者"),a("code",[e._v("http://host-ip-of-computer-with-docker-image")]),e._v("，如果默认端口有变，那么地址为："),a("code",[e._v("http://localhost:<host_port>")]),e._v("。")])]),e._v(" "),a("h3",{attrs:{id:"_5-3-更新到新版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-更新到新版"}},[e._v("#")]),e._v(" 5.3.更新到新版")]),e._v(" "),a("p",[e._v("Docker更新容器的方式如下：")]),e._v(" "),a("p",[a("code",[e._v("docker pull apacheignite/web-console-standalone")])]),e._v(" "),a("p",[a("code",[e._v("docker stop apacheignite/web-console-standalone")])]),e._v(" "),a("p",[a("code",[e._v("docker rm apacheignite/web-console-standalone")])]),e._v(" "),a("p",[a("code",[e._v("docker run -d -p 80:80 -v <host_absolute_path>:/var/lib/mongodb --name web-console-standalone apacheignite/web-console-standalone")])]),e._v(" "),a("h3",{attrs:{id:"_5-4-为web控制台添加https支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-为web控制台添加https支持"}},[e._v("#")]),e._v(" 5.4.为Web控制台添加HTTPS支持")]),e._v(" "),a("ul",[a("li",[e._v("创建"),a("code",[e._v("web-console.conf")]),e._v("文件，内容如下：")])]),e._v(" "),a("p",[e._v("web-console.conf：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('upstream backend-api {\n  server localhost:3000;\n}\n\n# redirect http to https\nserver {\n  listen 80 default_server;\n\n  return 301 https://<your-web-console-domain-name>$request_uri;\n}\n\n# https server settings\nserver {\n  listen 443 ssl;\n  server_name _;\n  ssl_certificate     server.crt;\n  ssl_certificate_key server.key;\n  ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;\n  ssl_ciphers         HIGH:!aNULL:!MD5;\n\n  set $ignite_console_dir /opt/web-console/static;\n\n  root $ignite_console_dir;\n\n  error_page 500 502 503 504 /50x.html;\n\n  location / {\n    try_files $uri /index.html = 404;\n  }\n\n  location /api/v1 {\n    proxy_set_header Host $http_host;\n    proxy_pass http://backend-api;\n  }\n\n  location /socket.io {\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_pass http://backend-api;\n  }\n\n  location /agents {\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_pass http://backend-api;\n  }\n\n  location = /50x.html {\n    root $ignite_console_dir/error_page;\n  }\n}\n')])])]),a("blockquote",[a("p",[e._v("将web-console.conf中的占位符"),a("code",[e._v("<your-web-console-domain-name>")]),e._v("替换为自己的域名，以便浏览器正确地从HTTP跳转到HTTPS。")])]),e._v(" "),a("ul",[a("li",[e._v("准备名为"),a("code",[e._v("server.crt")]),e._v("，"),a("code",[e._v("server.key")]),e._v("的证书文件；")]),e._v(" "),a("li",[e._v("启动Web控制台：")])]),e._v(" "),a("p",[a("code",[e._v("docker run -d -p 80:80 -p 443:443 -v <host_absolute_path>:/var/lib/mongodb -v <web-console.conf_absolute_path>:/etc/nginx/web-console.conf -v <server.crt_absolute_path>:/etc/nginx/server.crt -v < server.key_absolute_path>:/etc/nginx/server.key --name web-console-standalone apacheignite/web-console-standalone")])])])}),[],!1,null,null,null);t.default=n.exports}}]);