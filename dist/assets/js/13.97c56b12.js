(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{61:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"kafka连接器之在2-3版本中的改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kafka连接器之在2-3版本中的改进","aria-hidden":"true"}},[s._v("#")]),s._v(" Kafka连接器之在2.3版本中的改进")]),s._v(" "),t("p",[s._v("在Kafka的2.3版本中，对Kafka连接器做了很大的改进。首先就是在添加和删除连接器时，修改了Kafka连接器处理任务的方式。之前这个动作造成了整个系统的停顿，这是一直被开发和运维人员诟病的地方，除此之外，社区中频繁提到的其他一些问题，也得到了解决。")]),s._v(" "),t("h2",{attrs:{id:"kafka连接器中的增量协作再平衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kafka连接器中的增量协作再平衡","aria-hidden":"true"}},[s._v("#")]),s._v(" Kafka连接器中的增量协作再平衡")]),s._v(" "),t("p",[s._v("Kafka连接器集群由一个或多个工作节点进程组成，集群以任务的形式分发连接器的负载。在添加或删除连接器或工作节点时，Kafka连接器会尝试再平衡这些任务。在Kafka的2.3版本之前，集群会停止所有任务，重新计算所有任务的执行位置，然后重启所有任务。每次再平衡都会暂停所有数据进出的工作，通常时间很短，但有时也会持续一段时间。")]),s._v(" "),t("p",[s._v("现在通过"),t("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/KAFKA/KIP-415%3A+Incremental+Cooperative+Rebalancing+in+Kafka+Connect",target:"_self",rel:"noopener noreferrer"}},[s._v("KIP-415")]),s._v("，Kafka 2.3用增量协作再平衡做了替代，以后将仅对需要启动、停止或移动的任务进行再平衡。具体的详细信息请参见"),t("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/KAFKA/KIP-415%3A+Incremental+Cooperative+Rebalancing+in+Kafka+Connect",target:"_self",rel:"noopener noreferrer"}},[s._v("这里")]),s._v("。")]),s._v(" "),t("p",[s._v("下面用一些连接器做了一个简单的测试，这里只使用了一个分布式Kafka连接器工作节点，而源端使用了"),t("code",[s._v("kafka-connect-datagen")]),s._v("，它以固定的时间间隔根据给定的模式生成随机数据。以固定的时间间隔就可以粗略地计算由于再平衡而停止任务的时间，因为生成的消息作为Kafka消息的一部分，包含了时间戳。这些消息之后会被流式注入Elasticsearch，之所以用它，不仅因为它是一个易于使用的接收端，也因为可以通过观察源端消息的时间戳来查看生产中的任何停顿。")]),s._v(" "),t("p",[s._v("通过如下的方式，可以创建源端：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s -X PUT -H  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Content-Type:application/json"')]),s._v(" http://localhost:8083/connectors/source-datagen-01/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n    "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",\n    "kafka.topic": "orders",\n    "quickstart":"orders",\n    "max.interval":200,\n    "iterations":10000000,\n    "tasks.max": "1"\n  }\'')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("通过如下方式创建接收端：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s -X PUT -H  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Content-Type:application/json"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    http://localhost:8083/connectors/sink-elastic-orders-00/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n        "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",\n        "topics": "orders",\n        "connection.url": "http://elasticsearch:9200",\n        "type.name": "type.name=kafkaconnect",\n        "key.ignore": "true",\n        "schema.ignore": "false",\n        "transforms": "addTS",\n        "transforms.addTS.type": "org.apache.kafka.connect.transforms.InsertField'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Value")]),s._v('",\n        "transforms.addTS.timestamp.field": "op_ts"\n        }\'')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("这里使用了单消息转换，将Kafka消息的时间戳提升到消息本身的字段中，以便可以在Elasticsearch中进行公开。之后会使用Kibana进行绘制，这样产生的消息数量下降就可以显示出来，与再平衡发生的位置一致：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.confluent.io/wp-content/uploads/Kibana_Rebalance_Kafka_2.2_vs_2.3.png",alt:""}})]),s._v(" "),t("p",[s._v("在Kafka连接器的工作节点日志中，可以查看活动和时间，并对Kafka的2.2版本和2.3版本的行为进行比较：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.confluent.io/wp-content/uploads/Kafka_Connect_Worker_Log.png",alt:""}})]),s._v(" "),t("p",[s._v("**注意：**为了清楚地说明问题，日志做了精简处理。")]),s._v(" "),t("h2",{attrs:{id:"对日志的改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对日志的改进","aria-hidden":"true"}},[s._v("#")]),s._v(" 对日志的改进")]),s._v(" "),t("p",[s._v("在再平衡问题（如前述）已大大改善之后，Kafka连接器的第二大困扰可能是难以在Kafka连接器工作节点日志中确定某个消息属于哪个连接器。")]),s._v(" "),t("p",[s._v("之前可以直接从连接器的任务中获取日志中的消息，例如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("INFO Using multi thread/connection supporting pooling connection manager (io.searchbox.client.JestClientFactory)\nINFO Using default GSON instance (io.searchbox.client.JestClientFactory)\nINFO Node Discovery disabled... (io.searchbox.client.JestClientFactory)\nINFO Idle connection reaping disabled... (io.searchbox.client.JestClientFactory)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("他们属于哪个任务？不清楚。也许会认为"),t("code",[s._v("JestClient")]),s._v("与"),t("code",[s._v("Elasticsearch")]),s._v("有关，也许它们来自"),t("code",[s._v("Elasticsearch")]),s._v("连接器，但是现在有5个不同的"),t("code",[s._v("Elasticsearch")]),s._v("连接器在运行，那么它们来自哪个实例？更不用说连接器可以有多个任务了。")]),s._v(" "),t("p",[s._v("在Apache Kafka 2.3中，可以使用映射诊断上下文（MDC）日志，在日志中提供了更多的上下文信息：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("INFO [sink-elastic-orders-00|task-0] Using multi thread/connection supporting pooling connection manager (io.searchbox.client.JestClientFactory:223)\nINFO [sink-elastic-orders-00|task-0] Using default GSON instance (io.searchbox.client.JestClientFactory:69)\nINFO [sink-elastic-orders-00|task-0] Node Discovery disabled... (io.searchbox.client.JestClientFactory:86)\nINFO [sink-elastic-orders-00|task-0] Idle connection reaping disabled... (io.searchbox.client.JestClientFactory:98)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这个日志格式的更改默认是禁用的，以保持后向兼容性。要启用此改进，需要编辑"),t("code",[s._v("etc/kafka/connect-log4j.properties")]),s._v("文件，按照如下方式修改"),t("code",[s._v("log4j.appender.stdout.layout.ConversionPattern")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.appender.stdout.layout.ConversionPattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("[%d] %p %X{connector.context}%m (%c:%L)%n")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("通过环境变量"),t("code",[s._v("CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN")]),s._v("，"),t("a",{attrs:{href:"https://hub.docker.com/r/confluentinc/cp-kafka-connect",target:"_self",rel:"noopener noreferrer"}},[s._v("Kafka连接器的Docker镜像")]),s._v("也支持了这个特性。")]),s._v(" "),t("p",[s._v("具体细节请参见"),t("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/KAFKA/KIP-449%3A+Add+connector+contexts+to+Connect+worker+logs",target:"_self",rel:"noopener noreferrer"}},[s._v("KIP-449")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("REST改进")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/KAFKA/KIP-465%3A+Add+Consolidated+Connector+Endpoint+to+Connect+REST+API",target:"_self",rel:"noopener noreferrer"}},[s._v("KIP-465")]),s._v("为"),t("code",[s._v("/connectors")]),s._v("REST端点添加了一些方便的功能。通过传递其他参数，可以获取有关每个连接器的更多信息，而不必迭代结果并进行其他REST调用。")]),s._v(" "),t("p",[s._v("例如，在Kafka 2.3之前要查询所有任务的状态，必须执行以下操作，使用"),t("code",[s._v("xargs")]),s._v("迭代输出并重复调用"),t("code",[s._v("status")]),s._v("端点：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8083/connectors"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    jq "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.[]'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -I"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("connector_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8083/connectors/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("connector_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/status"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    jq -c -M "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[.name,.connector.state,.tasks[].state]|join(\":|:\")'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" -t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("//g'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("\nsink-elastic-orders-00  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING\nsource-datagen-01       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("现在使用Kafka 2.3，可以使用"),t("code",[s._v("/connectors?expand=status")]),s._v("加上一些"),t("code",[s._v("jq")]),s._v("技巧进行单个REST调用，就可以达到和之前一样的效果：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8083/connectors?expand=status"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n     jq "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'to_entries[] | [.key, .value.status.connector.state,.value.status.tasks[].state]|join(\":|:\")'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" -t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("//g'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("\nsink-elastic-orders-00  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING\nsource-datagen-01       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("还有"),t("code",[s._v("/connectors?expand=status")]),s._v("，它将返回每个连接器信息，如配置、连接器类型等，也可以把它们结合起来：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8083/connectors?expand=info&expand=status"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jq "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'to_entries[] | [ .value.info.type, .key, .value.status.connector.state,.value.status.tasks[].state,.value.info.config."connector.class"]|join(":|:")\'')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" -t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("//g'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("\nsink    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  sink-elastic-orders-00  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  io.confluent.connect.elasticsearch.ElasticsearchSinkConnector\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  source-datagen-01       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  RUNNING  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  io.confluent.kafka.connect.datagen.DatagenConnector\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("Kafka连接器现已支持client.id")])]),s._v(" "),t("p",[s._v("因为"),t("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/KAFKA/KIP-411%3A+Make+default+Kafka+Connect+worker+task+client+IDs+distinct",target:"_self",rel:"noopener noreferrer"}},[s._v("KIP-411")]),s._v("，Kafka连接器现在可以以更有用的方式为每项任务配置"),t("code",[s._v("client.id")]),s._v("。之前，只能看到"),t("code",[s._v("consumer-25")]),s._v("作为连接器的消费者组的一部分从给定的分区进行消费，现在则可以将其直接绑定回特定的任务，从而使故障排除和诊断更加容易。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.confluent.io/wp-content/uploads/KIP-411_Kafka_Connect_client.id_.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("连接器级生产者/消费者配置覆写")])]),s._v(" "),t("p",[s._v("长期以来的一个常见需求是能够覆写分别由Kafka连接器接收端和源端使用的"),t("a",{attrs:{href:"https://kafka.apache.org/documentation/#consumerconfigs",target:"_self",rel:"noopener noreferrer"}},[s._v("消费者设置")]),s._v("或"),t("a",{attrs:{href:"https://kafka.apache.org/documentation/#producerconfigs",target:"_self",rel:"noopener noreferrer"}},[s._v("生产者设置")]),s._v("。到目前为止，它们都采用了工作节点配置中指定的值，除非生成了更多的工作节点，否则无法对诸如安全主体之类的内容进行细粒度的控制。")]),s._v(" "),t("p",[s._v("Kafka 2.3中的"),t("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/KAFKA/KIP-458%3A+Connector+Client+Config+Override+Policy",target:"_self",rel:"noopener noreferrer"}},[s._v("KIP-458")]),s._v("使工作节点能够允许对配置进行覆写。"),t("code",[s._v("connector.client.config.override.policy")]),s._v("是一个新的参数，在工作节点级可以有3个可选项：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("值")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("None")]),s._v(" "),t("td",[t("strong",[s._v("默认策略")]),s._v("，不允许任何配置的覆写")])]),s._v(" "),t("tr",[t("td",[s._v("Principal")]),s._v(" "),t("td",[s._v("允许覆盖生产者、消费者和"),t("code",[s._v("admin")]),s._v("前缀的"),t("code",[s._v("security.protocol")]),s._v("、"),t("code",[s._v("sasl.jaas.config")]),s._v("和"),t("code",[s._v("sasl.mechanism")])])]),s._v(" "),t("tr",[t("td",[s._v("All")]),s._v(" "),t("td",[s._v("允许覆盖生产者、消费者和"),t("code",[s._v("admin")]),s._v("前缀的所有配置")])])])]),s._v(" "),t("p",[s._v("通过在工作节点配置中设置上述参数，现在可以针对每个连接器对配置进行覆写。只需提供带有"),t("code",[s._v("consumer.override")]),s._v("（接收端）或"),t("code",[s._v("producer.override")]),s._v("（源端）前缀的必需参数即可，还可以针对"),t("a",{attrs:{href:"https://liyuj.gitee.io/confluent/Kafka-ErrorHandlingDeadLetterQueues.html",target:"_self",rel:"noopener noreferrer"}},[s._v("死信队列")]),s._v("使用"),t("code",[s._v("admin.override")]),s._v("。")]),s._v(" "),t("p",[s._v("在下面的示例中，创建连接器时，它将从主题的当前点开始消费数据，而不是读取主题中的所有可用数据，这是通过将"),t("code",[s._v("consumer.override.auto.offset.reset")]),s._v("配置为"),t("code",[s._v("latest")]),s._v("覆盖"),t("code",[s._v("auto.offset.reset configuration")]),s._v("来实现的。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -i -X PUT -H  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Content-Type:application/json"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      http://localhost:8083/connectors/sink-elastic-orders-01-latest/config "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n      -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\n  "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",\n  "topics": "orders",\n  "consumer.override.auto.offset.reset": "latest",\n  "tasks.max": 1,\n  "connection.url": "http://elasticsearch:9200",  "type.name": "type.name=kafkaconnect",\n  "key.ignore": "true",   "schema.ignore": "false",\n  "transforms": "renameTopic",\n  "transforms.renameTopic.type": "org.apache.kafka.connect.transforms.RegexRouter",\n  "transforms.renameTopic.regex": "orders",\n  "transforms.renameTopic.replacement": "orders-latest"\n}\'')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("通过检查工作节点日志，可以看到覆写已经生效：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[2019-07-17 13:57:27,532] INFO [sink-elastic-orders-01-latest|task-0] ConsumerConfig values:\n        allow.auto.create.topics = true\n        auto.commit.interval.ms = 5000\n        auto.offset.reset = latest\n[…]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("可以看到这个"),t("code",[s._v("ConsumerConfig")]),s._v("日志条目与创建的连接器直接关联，证明了上述MDC日志记录的有用性。")]),s._v(" "),t("p",[s._v("第二个连接器运行于同一主题但没有"),t("code",[s._v("consumer.override")]),s._v("，因此继承了默认值"),t("code",[s._v("earliest")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[2019-07-17 13:57:27,487] INFO [sink-elastic-orders-01-earliest|task-0] ConsumerConfig values:\n        allow.auto.create.topics = true\n        auto.commit.interval.ms = 5000\n        auto.offset.reset = earliest\n[…]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("通过将数据从主题流式传输到Elasticsearch可以检查配置的差异造成的影响。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:9200/_cat/indices?h=idx,docsCount"')]),s._v("\norders-latest     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2369")]),s._v("\norders-earliest "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("144932")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("有两个索引：一个从同一主题注入了较少的消息，因为"),t("code",[s._v("orders-latest")]),s._v("索引只注入了连接器创建后才到达主题的消息；而另一个"),t("code",[s._v("orders-earliest")]),s._v("索引，由一个单独的连接器注入，它会使用Kafka连接器的默认配置，即会注入所有的新消息，再加上主题中原有的所有消息。")])])}),[],!1,null,null,null);a.default=n.exports}}]);